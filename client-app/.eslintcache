[{"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\index.tsx":"1","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\reportWebVitals.ts":"2","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\layout\\App.tsx":"3","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx":"4","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx":"5","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx":"6","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx":"7","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx":"8","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\api\\agent.ts":"9","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx":"10","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts":"11"},{"size":566,"mtime":1610170332208,"results":"12","hashOfConfig":"13"},{"size":425,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":2909,"mtime":1610806252656,"results":"15","hashOfConfig":"13"},{"size":655,"mtime":1610248797286,"results":"16","hashOfConfig":"13"},{"size":2343,"mtime":1610806786155,"results":"17","hashOfConfig":"13"},{"size":1887,"mtime":1610806845852,"results":"18","hashOfConfig":"13"},{"size":1480,"mtime":1610806562537,"results":"19","hashOfConfig":"13"},{"size":2645,"mtime":1610779859878,"results":"20","hashOfConfig":"13"},{"size":1184,"mtime":1610780677107,"results":"21","hashOfConfig":"13"},{"size":330,"mtime":1610779362894,"results":"22","hashOfConfig":"13"},{"size":1168,"mtime":1611381279832,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1xb7r9s",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\index.tsx",[],["50","51"],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\reportWebVitals.ts",[],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\layout\\App.tsx",["52","53","54","55"],"import React, {useState, useEffect, Fragment, SyntheticEvent, useContext} from 'react';\nimport { Container } from 'semantic-ui-react'\nimport { IActivity } from '../models/activity';\nimport { NavBar } from '../../features/nav/NavBar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport agent from '../api/agent';\nimport { LoadingComponent } from '../layout/LoadingComponent';\nimport ActivityStore from '../stores/activityStore';\nimport { observer } from 'mobx-react-lite';\n\nconst App = () =>  {\n\n  const activityStore = useContext(ActivityStore);\n  const [activities, setActivities] = useState<IActivity[]>([])\n  const [selectedActivity, setSelectedActivity] = useState<IActivity | null>(null);\n  const [editMode, setEditMode] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [target, setTarget] = useState('');\n\n  const handleSelectActivity = (id: string) => {\n    setSelectedActivity(activities.filter(a => a.id === id)[0]);\n    setEditMode(false);\n  };\n\n  const handleOpenCreateForm = () => {\n    setSelectedActivity(null);\n    setEditMode(true);\n  };\n\n  const handleCreateActivity = (activity: IActivity) => {\n    setSubmitting(true);\n    agent.Activities.create(activity).then(() => {\n      setActivities([...activities, activity]);\n      setSelectedActivity(activity);\n      setEditMode(false);\n    }).then(() => setSubmitting(false));\n  };\n\n  const handleEditActivity = (activity: IActivity) => {\n    setSubmitting(true);\n    agent.Activities.update(activity).then(() => {\n      setActivities([...activities.filter(a => a.id !== activity.id), activity]);\n      setSelectedActivity(activity);\n      setEditMode(false);\n    }).then(() => setSubmitting(false));\n  };\n\n  const handleDeleteActivity = (event: SyntheticEvent<HTMLButtonElement>, id: string) => {\n    setSubmitting(true);\n    setTarget(event.currentTarget.name);\n    agent.Activities.delete(id).then(() => {\n      setActivities([...activities.filter(a => a.id !== id)]);\n    }).then(() => setSubmitting(false));\n  };\n\n  useEffect(() => {\n    activityStore.loadActivities();\n  }, [activityStore]);\n\n  if (activityStore.loadingInitial) return <LoadingComponent content='Loading activities...' />\n\n  return (\n    <Fragment>\n      <NavBar openCreateForm={handleOpenCreateForm} />\n      <Container style={{marginTop: '7em'}}>\n        <ActivityDashboard \n          activities={activityStore.activities} \n          selectActivity={handleSelectActivity} \n          setEditMode={setEditMode}\n          setSelectedActivity={setSelectedActivity}\n          createActivity={handleCreateActivity}\n          editActivity={handleEditActivity}\n          deleteActivity={handleDeleteActivity}\n          submitting={submitting}\n          target={target}\n        />\n      </Container>\n    </Fragment>\n  );\n};\n\nexport default observer(App);\n","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\nav\\NavBar.tsx",[],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityDashboard.tsx",["56","57"],"import React, { SyntheticEvent, useContext } from 'react'\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { IActivity } from '../../../app/models/activity';\r\nimport ActivityList from './ActivityList';\r\nimport ActivityDetails from '../details/ActivityDetails';\r\nimport { ActivityForm } from '../form/ActivityForm';\r\nimport { observer } from 'mobx-react-lite';\r\nimport ActivityStore from '../../../app/stores/activityStore';\r\n\r\ninterface IProps {\r\n    activities: IActivity[];\r\n    selectActivity: (id: string) => void;\r\n    setEditMode: (editMode: boolean) => void;\r\n    setSelectedActivity: (activity: IActivity | null) => void;\r\n    createActivity: (activity: IActivity) => void;\r\n    editActivity: (activity: IActivity) => void;\r\n    deleteActivity: (e: SyntheticEvent<HTMLButtonElement>, id: string) => void;\r\n    submitting: boolean;\r\n    target: string;\r\n};\r\n\r\nconst ActivityDashboard: React.FC<IProps> = ({\r\n    activities, \r\n    selectActivity, \r\n    setEditMode, \r\n    setSelectedActivity,\r\n    createActivity,\r\n    editActivity,\r\n    deleteActivity,\r\n    submitting,\r\n    target\r\n}) => {\r\n    const activityStore = useContext(ActivityStore);\r\n    const {editMode, selectedActivity} = activityStore;\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={10}>\r\n                <ActivityList \r\n                    deleteActivity={deleteActivity} \r\n                    submitting={submitting}\r\n                    target={target}\r\n                />\r\n            </Grid.Column>\r\n            <Grid.Column width={6}>\r\n                {selectedActivity && !editMode && (\r\n                    <ActivityDetails \r\n                        setEditMode={setEditMode} \r\n                        setSelectedActivity={setSelectedActivity} \r\n                    />\r\n                )}\r\n                {editMode && \r\n                    <ActivityForm\r\n                        key={selectedActivity && selectedActivity.id || 0}\r\n                        setEditMode={setEditMode} \r\n                        activity={selectedActivity!}\r\n                        createActivity={createActivity}\r\n                        editActivity={editActivity}\r\n                        submitting={submitting}\r\n                    />\r\n                }\r\n            </Grid.Column>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\dashboard\\ActivityList.tsx",[],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\details\\ActivityDetails.tsx",[],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\features\\activities\\form\\ActivityForm.tsx",[],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\api\\agent.ts",["58"],"import axios, { AxiosResponse } from 'axios';\r\nimport { IActivity } from '../models/activity';\r\n\r\naxios.defaults.baseURL = 'http://localhost:5000/api';\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst sleep = (ms: number) => (response: AxiosResponse) => \r\n    new Promise<AxiosResponse>(resolve => setTimeout(() => resolve(response), ms));\r\n\r\nconst requests = {\r\n    get: (url: string) => axios.get(url).then(sleep(1000)).then(responseBody),\r\n    post: (url: string, body: {}) => axios.post(url, body).then(sleep(1000)).then(responseBody),\r\n    put: (url: string, body: {}) => axios.put(url, body).then(sleep(1000)).then(responseBody),\r\n    del: (url: string) => axios.delete(url).then(sleep(1000)).then(responseBody)\r\n};\r\n\r\nconst Activities = {\r\n    list: (): Promise<IActivity[]> => requests.get('/activities'),\r\n    details: (id: string) => requests.get(`/activities/${id}`),\r\n    create: (activity: IActivity) => requests.post('/activities', activity),\r\n    update: (activity: IActivity) => requests.put(`/activities/${activity.id}`, activity),\r\n    delete: (id: string) => requests.del(`/activities/${id}`)\r\n};\r\n\r\nexport default {\r\n    Activities\r\n}\r\n","D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\layout\\LoadingComponent.tsx",[],"D:\\Complete guide to building an app with .Net core and React\\Reactivities\\client-app\\src\\app\\stores\\activityStore.ts",[],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":15,"column":10,"nodeType":"65","messageId":"66","endLine":15,"endColumn":26},{"ruleId":"63","severity":1,"message":"67","line":16,"column":10,"nodeType":"65","messageId":"66","endLine":16,"endColumn":18},{"ruleId":"63","severity":1,"message":"68","line":17,"column":10,"nodeType":"65","messageId":"66","endLine":17,"endColumn":17},{"ruleId":"63","severity":1,"message":"69","line":17,"column":19,"nodeType":"65","messageId":"66","endLine":17,"endColumn":29},{"ruleId":"70","severity":1,"message":"71","line":53,"column":47,"nodeType":"72","messageId":"73","endLine":53,"endColumn":49},{"ruleId":"70","severity":1,"message":"71","line":53,"column":70,"nodeType":"72","messageId":"73","endLine":53,"endColumn":72},{"ruleId":"74","severity":1,"message":"75","line":26,"column":1,"nodeType":"76","endLine":28,"endColumn":2},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"@typescript-eslint/no-unused-vars","'selectedActivity' is assigned a value but never used.","Identifier","unusedVar","'editMode' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","no-mixed-operators","Unexpected mix of '&&' and '||'.","LogicalExpression","unexpectedMixedOperator","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]